// Code generated by goctl. DO NOT EDIT.
// Source: cartServer.proto

package cartservice

import (
	"context"

	"www.genji.xin/backend/CareZero/cartServer/cart"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CartItem        = cart.CartItem
	ClearCartReq    = cart.ClearCartReq
	ClearCartResp   = cart.ClearCartResp
	CreatedCartReq  = cart.CreatedCartReq
	CreatedCartResp = cart.CreatedCartResp
	GetCartInfoReq  = cart.GetCartInfoReq
	GetCartInfoResp = cart.GetCartInfoResp

	CartService interface {
		CreatedCart(ctx context.Context, in *CreatedCartReq, opts ...grpc.CallOption) (*CreatedCartResp, error)
		ClearCart(ctx context.Context, in *ClearCartReq, opts ...grpc.CallOption) (*ClearCartResp, error)
		GetCartInfo(ctx context.Context, in *GetCartInfoReq, opts ...grpc.CallOption) (*GetCartInfoResp, error)
	}

	defaultCartService struct {
		cli zrpc.Client
	}
)

func NewCartService(cli zrpc.Client) CartService {
	return &defaultCartService{
		cli: cli,
	}
}

func (m *defaultCartService) CreatedCart(ctx context.Context, in *CreatedCartReq, opts ...grpc.CallOption) (*CreatedCartResp, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.CreatedCart(ctx, in, opts...)
}

func (m *defaultCartService) ClearCart(ctx context.Context, in *ClearCartReq, opts ...grpc.CallOption) (*ClearCartResp, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.ClearCart(ctx, in, opts...)
}

func (m *defaultCartService) GetCartInfo(ctx context.Context, in *GetCartInfoReq, opts ...grpc.CallOption) (*GetCartInfoResp, error) {
	client := cart.NewCartServiceClient(m.cli.Conn())
	return client.GetCartInfo(ctx, in, opts...)
}
